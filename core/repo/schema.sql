CREATE TABLE IF NOT EXISTS AcademicYears (
    ID SERIAL PRIMARY KEY,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS Semesters (
    ID SERIAL PRIMARY KEY,
    Year_ID INTEGER NOT NULL REFERENCES AcademicYears(ID),
    Name VARCHAR(255) NOT NULL,
    StartDate DATE NOT NULL,
    WeeksDuration INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS Subjects (
    ID SERIAL PRIMARY KEY,
    Name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Categories (
    ID SERIAL PRIMARY KEY,
    Name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Curriculum (
    ID SERIAL PRIMARY KEY,
    Subject_id INTEGER NOT NULL REFERENCES Subjects(ID),
    Description TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Exams (
    ID SERIAL PRIMARY KEY,
    Subject_ID INTEGER NOT NULL REFERENCES Subjects(ID),
    Category_ID INTEGER NOT NULL REFERENCES Categories(ID),
    Description TEXT NOT NULL,
    Date VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Holidays (
    ID SERIAL PRIMARY KEY,
    Category_ID INTEGER NOT NULL REFERENCES Categories(ID),
    Date VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS AcademicCalendar (
    ID SERIAL PRIMARY KEY,
    Semester_ID INTEGER NOT NULL REFERENCES Semesters(ID),
    DayNumber INTEGER NOT NULL,
    Subject_ID INTEGER REFERENCES Subjects(ID),
    Curriculum_ID INTEGER REFERENCES Curriculum(ID),
    Exam_ID INTEGER REFERENCES Exams(ID),
    Holiday_ID INTEGER REFERENCES Holidays(ID),
    Description TEXT
);

CREATE TABLE IF NOT EXISTS CurriculumSchedule (
    ID SERIAL PRIMARY KEY,
    Curriculum_ID INTEGER NOT NULL REFERENCES Curriculum(ID),
    Subject_ID INTEGER NOT NULL REFERENCES Subjects(ID),
    Semester_ID INTEGER NOT NULL REFERENCES Semesters(ID),
    DayOffset INTEGER NOT NULL,
    Description TEXT NOT NULL,
    UNIQUE (Curriculum_ID, Subject_ID, Semester_ID, DayOffset)
);
